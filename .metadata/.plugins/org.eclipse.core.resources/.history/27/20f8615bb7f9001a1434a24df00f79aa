package sampleFrameWork;

import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class EventMethods {

	public  static WebElement wait_for_element(By locator,int timeouts) {
		WebElement element;
		try {
			WebDriverWait wait=new WebDriverWait(Data.driver, timeouts);
			element=wait.until(ExpectedConditions.presenceOfElementLocated(locator));
			wait.pollingEvery(Duration.ofMillis(200));
		} catch (Exception e) {
			element=null;
			System.out.println("Element not located even waiting "+element.toString()+"even wait for "+timeouts);
		}
		return element;
	}

	public static WebElement Wait_for_element_to_enable(By locator,int timeOuts) {
		WebElement element;
		try {
			WebDriverWait wait =new WebDriverWait(Data.driver, timeOuts);
			element=wait.until(ExpectedConditions.elementToBeClickable(locator));
			wait.pollingEvery(Duration.ofMillis(200));
		} catch (Exception e) {
			element=null;
			System.out.println("Element "+element+"is not enabled even wait for "+timeOuts);
		}
		return element;
	}
	
	public static boolean wait_for_element_to_enable(WebElement element,int timeOuts) {
		boolean isEnabled;
		try {
			WebDriverWait wait =new WebDriverWait(Data.driver, timeOuts);
			element=wait.until(ExpectedConditions.elementToBeClickable(locator));
			wait.pollingEvery(Duration.ofMillis(200));
			isEnabled=true;
		} catch (Exception e) {
			element=null;
			System.out.println("Element "+element+"is not enabled even wait for "+timeOuts);
			isEnabled=false;
		}
		return isEnabled;
	}
	}
}
